{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"oNAgCeA,EA9BS,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAkBrC,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SArBY,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,c,+BCPtBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBACIC,IAAKf,EACLgB,IAAKN,IAET,4BAAIA,QCyEDO,EA3EC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECLJ,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAgBrC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDIiBK,CAAa1B,GAA9BO,EAfqB,EAerBA,KAAMa,EAfe,EAefA,QAEb,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAqCQT,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAGQA,GAFCA,EAAIC,aE9DxBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,UAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YAUjChB,EAAY6C,UAAY,CACnB5C,cAAe6C,IAAUC,KAAKC,Y,MChCnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7f6a80c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n    const AddCategory = ({setCategories}) => {\r\n        const [inputValue, setInputValue] = useState('');\r\n        \r\n        const handleInputText = (e) => {\r\n            // console.log(e.target.value);\r\n            setInputValue(e.target.value);\r\n        };\r\n        \r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            if(inputValue.trim().length > 2){\r\n                // console.log('Submit hecho...');\r\n                setCategories( cats => [inputValue, ...cats,]);\r\n                setInputValue('');\r\n            }\r\n        };\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>{inputValue}</h1>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputText}\r\n                />\r\n            </form>\r\n        );\r\n    };\r\n\r\nexport default AddCategory","export const getGifs = async(category) => {\r\n    //const url = 'https://api.giphy.com/v1/gifs/search?q=Vader&limit=10&api_key=1pAmIF2Ryq066d4fo6zlzziuDHWjsOoj';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=1pAmIF2Ryq066d4fo6zlzziuDHWjsOoj`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img \r\n                src={url}\r\n                alt={title}\r\n            />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react'\r\n//import PropTypes from 'prop-types'\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    // const [count, setCount] = useState(0);\r\n    \r\n    //const [images, setImages] = useState([]);\r\n\r\n    // useEffect( ()=> {\r\n    //     getGifs(category)\r\n    //         .then(imgs => setImages(imgs));\r\n    // }, []);\r\n\r\n    // useEffect( ()=> {\r\n    //     getGifs(category)\r\n    //         .then(setImages);\r\n    // }, [category]);\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">            \r\n                {/* <h3>{count}</h3>\r\n                <button onClick={() => setCount(count + 1)}></button> */}\r\n\r\n                {/* <ol>\r\n                    {\r\n                        // images.map(img => {\r\n                        //     return  <li key={img.id}>{img.title}</li>                        \r\n                        // })\r\n                        \r\n                        // images.map(img => (\r\n                        //     <li key={img.id}>{img.title}</li>                        \r\n                        // ))\r\n\r\n                        images.map(({id, title}) => (\r\n                            <li key={id}>{title}</li>                        \r\n                        ))\r\n                }\r\n                </ol> */}\r\n\r\n                {\r\n                    // images.map(img => {\r\n                    //     return  <li key={img.id}>{img.title}</li>                        \r\n                    // })\r\n                    \r\n                    // images.map(img => (\r\n                    //     <li key={img.id}>{img.title}</li>                        \r\n                    // ))\r\n\r\n                    // images.map(img => (\r\n                    //     <GifGridItem\r\n                    //          key={img.id}\r\n                    //         // img={img}\r\n                    //          {...img} \r\n                    //     />\r\n                    // ))\r\n                \r\n                    data.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            // img={img}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });                        \r\n            });\r\n    }, [category]);\r\n\r\n    return state; //{data: [], loading: true}\r\n};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddCategory from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['Luke', 'Hans Solo', 'Vader'];\r\n    //const [categories, setCategories] = useState(['Luke', 'Han Solo', 'Vader']);\r\n    const [categories, setCategories] = useState(['Vader']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //*setCategories([...categories, 'Nuevo item']);\r\n    //     //*setCategories( cats => [ 'Nuevo item', ...cats]);\r\n    //     setCategories( () => [...categories, 'Nuevo item']);        \r\n    // };\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }   \r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n     setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}